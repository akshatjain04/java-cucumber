// ********RoostGPT********
/*
Test generated by RoostGPT for test akshat-shared-test-1 using AI Type  and AI Model

ROOST_METHOD_HASH=setB_3eb309de41
ROOST_METHOD_SIG_HASH=setB_d19f9d277f

"""
Scenario 1: Validate setB method with valid input
Details:
  TestName: validateSetBWithValidInput
  Description: This test is meant to check if the setB method sets the value of b correctly when given valid input.
Execution:
  Arrange: Create a StudentGrade object and a valid double value for b.
  Act: Invoke the setB method with the valid double value.
  Assert: Use a getAverage method to compute the average and verify if the value of b was set correctly.
Validation:
  The assertion aims to verify that the setB method works as expected with valid input. The significance of this test is to ensure that the student's grade is set correctly, which is crucial for calculating the average grade.

Scenario 2: Validate setB method with zero
Details:
  TestName: validateSetBWithZero
  Description: This test is meant to check if the setB method sets the value of b correctly when given zero as input.
Execution:
  Arrange: Create a StudentGrade object and set the value for b as zero.
  Act: Invoke the setB method with zero as the value.
  Assert: Use a getAverage method to compute the average and verify if the value of b was set to zero.
Validation:
  The assertion aims to verify that the setB method works as expected when the input is zero. The significance of this test is to ensure that the student's grade can be set to zero, which is important in scenarios where the student has not yet received a grade.

Scenario 3: Validate setB method with negative input
Details:
  TestName: validateSetBWithNegativeInput
  Description: This test is meant to check if the setB method sets the value of b correctly when given a negative value.
Execution:
  Arrange: Create a StudentGrade object and set the value for b as a negative value.
  Act: Invoke the setB method with the negative value.
  Assert: Use a getAverage method to compute the average and verify if the value of b was set correctly.
Validation:
  The assertion aims to verify that the setB method works as expected when the input is negative. The significance of this test is to ensure that the student's grade cannot be set to a negative value, which is crucial for maintaining the integrity of the grading system.
"""
*/

// ********RoostGPT********

package br.masmangan.beecrowd.bee1005;

import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.*;

public class StudentGradeSetBTest {

	@Test
	@Tag("valid")
	public void validateSetBWithValidInput() {
		// Arrange
		StudentGrade studentGrade = new StudentGrade();
		double b = 7.5;
		// Act
		studentGrade.setB(b);
		// Assert
		double expected = (0 * 3.5 + b * 7.5) / 11.0;
		assertEquals(expected, studentGrade.getAverage(),
				"setB method does not set the value of b correctly with valid input");
	}

	@Test
	@Tag("boundary")
	public void validateSetBWithZero() {
		// Arrange
		StudentGrade studentGrade = new StudentGrade();
		double b = 0;
		// Act
		studentGrade.setB(b);
		// Assert
		double expected = (0 * 3.5 + b * 7.5) / 11.0;
		assertEquals(expected, studentGrade.getAverage(),
				"setB method does not set the value of b correctly with zero input");
	}

	@Test
	@Tag("invalid")
	public void validateSetBWithNegativeInput() {
		// Arrange
		StudentGrade studentGrade = new StudentGrade();
		double b = -7.5;
		// Act
		studentGrade.setB(b);
		// Assert
		double expected = (0 * 3.5 + b * 7.5) / 11.0;
		assertEquals(expected, studentGrade.getAverage(),
				"setB method does not set the value of b correctly with negative input");
	}

}